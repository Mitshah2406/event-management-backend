version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: evently_postgres_dev
    environment:
      POSTGRES_DB: evently_db
      POSTGRES_USER: evently_user
      POSTGRES_PASSWORD: evently_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - evently_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evently_user -d evently_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: evently_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - evently_dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Optional: Database management tool
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: evently_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@evently.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - evently_dev
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools

  # Optional: Redis management tool
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: evently_redis_commander_dev
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - evently_dev
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - tools

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  evently_dev:
    driver: bridge
    name: evently_dev_network
